apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: {{ .Values.namespace }}
  labels:     
    app: nginx
spec:
  replicas: {{ .Values.replica }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }} 
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    events {
        worker_connections  1024;
    }
    http {
        vhost_traffic_status_bypass_limit on;
        vhost_traffic_status_histogram_buckets 0.005 0.01 0.05 0.1 0.5 1 5 10;
        vhost_traffic_status_limit on;
        vhost_traffic_status_zone;
        vhost_traffic_status_bypass_stats on;
        vhost_traffic_status_filter on;
        server {
            listen 8080;
            location /status {
                vhost_traffic_status_display;
                vhost_traffic_status_display_format prometheus;
            }
        }
        server {
          listen 8080;
          location / {
            proxy_pass http://wordpress.wordpress.svc.cluster.local:80;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Host $host;
          }
        }
        server {
          listen 8081;
          location /stub_status {
            stub_status;
          }
        }
    }